-- Web Development MCQ Questions Generator
-- 50 medium difficulty questions for web development

-- First, let's create a job description for web development if it doesn't exist
INSERT INTO job_descriptions (id, title, description, requirements, responsibilities, company_name, location, salary_range, employment_type, experience_level, skills_required, created_at, updated_at, is_active)
VALUES (
  'web-dev-job-001',
  'Frontend Web Developer',
  'We are looking for a skilled Frontend Web Developer to join our team. The ideal candidate will be responsible for building user-facing web applications using modern web technologies.',
  'Bachelor degree in Computer Science or related field, 2-3 years of experience in web development, strong knowledge of HTML, CSS, JavaScript, and modern frameworks.',
  'Develop and maintain web applications, collaborate with design team, optimize applications for maximum speed and scalability, ensure cross-browser compatibility.',
  'TechCorp Solutions',
  'Remote',
  '$60,000 - $80,000',
  'Full-time',
  'Mid-level',
  '["HTML", "CSS", "JavaScript", "React", "Vue.js", "TypeScript", "Webpack", "Git"]',
  NOW(),
  NOW(),
  true
) ON CONFLICT (id) DO NOTHING;

-- Create topics for web development
INSERT INTO question_topics (id, name, description, created_at, updated_at, is_active)
VALUES 
  ('html-css-basics', 'HTML & CSS Fundamentals', 'Basic concepts of HTML structure and CSS styling', NOW(), NOW(), true),
  ('javascript-core', 'JavaScript Core Concepts', 'Fundamental JavaScript programming concepts', NOW(), NOW(), true),
  ('dom-manipulation', 'DOM Manipulation', 'Working with the Document Object Model', NOW(), NOW(), true),
  ('css-layout', 'CSS Layout & Responsive Design', 'CSS Grid, Flexbox, and responsive design principles', NOW(), NOW(), true),
  ('javascript-async', 'JavaScript Async Programming', 'Promises, async/await, and asynchronous programming', NOW(), NOW(), true),
  ('web-apis', 'Web APIs & HTTP', 'Understanding web APIs, HTTP methods, and status codes', NOW(), NOW(), true),
  ('browser-apis', 'Browser APIs', 'Local Storage, Session Storage, and other browser APIs', NOW(), NOW(), true),
  ('performance', 'Web Performance', 'Optimization techniques and performance best practices', NOW(), NOW(), true),
  ('security', 'Web Security', 'Security best practices and common vulnerabilities', NOW(), NOW(), true),
  ('modern-js', 'Modern JavaScript', 'ES6+ features and modern JavaScript concepts', NOW(), NOW(), true)
ON CONFLICT (id) DO NOTHING;

-- Insert 50 MCQ questions
INSERT INTO exam_questions (
  id,
  job_description_id,
  question_text,
  question_type,
  question_category,
  difficulty_level,
  mcq_options,
  correct_answer,
  answer_explanation,
  points,
  time_limit_seconds,
  tags,
  topic_id,
  subtopic,
  created_by,
  status,
  hr_notes,
  created_at,
  updated_at,
  is_active
) VALUES 
-- HTML & CSS Fundamentals (10 questions)
(
  'web-dev-q001',
  'web-dev-job-001',
  'What is the correct HTML5 semantic element for the main content of a webpage?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "<main>"}, {"option": "B", "text": "<content>"}, {"option": "C", "text": "<body>"}, {"option": "D", "text": "<section>"}]',
  'A',
  'The <main> element represents the main content of the document. It should be unique and not nested within other semantic elements like <article>, <aside>, <footer>, <header>, or <nav>.',
  2,
  60,
  '["HTML5", "semantic", "structure"]',
  'html-css-basics',
  'Semantic HTML',
  'system',
  'approved',
  'Good question for testing HTML5 knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q002',
  'web-dev-job-001',
  'Which CSS property is used to create rounded corners?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "border-radius"}, {"option": "B", "text": "corner-radius"}, {"option": "C", "text": "round-corner"}, {"option": "D", "text": "border-round"}]',
  'A',
  'The border-radius property is used to create rounded corners. It can take values in pixels, percentages, or other CSS units.',
  2,
  45,
  '["CSS", "styling", "border"]',
  'html-css-basics',
  'CSS Properties',
  'system',
  'approved',
  'Basic CSS knowledge test',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q003',
  'web-dev-job-001',
  'What does CSS specificity determine?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Which CSS rule takes precedence when multiple rules apply"}, {"option": "B", "text": "How fast CSS loads"}, {"option": "C", "text": "The order of CSS files"}, {"option": "D", "text": "The size of CSS files"}]',
  'A',
  'CSS specificity determines which CSS rule takes precedence when multiple rules apply to the same element. Higher specificity rules override lower specificity rules.',
  2,
  60,
  '["CSS", "specificity", "cascade"]',
  'html-css-basics',
  'CSS Specificity',
  'system',
  'approved',
  'Important concept for CSS mastery',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q004',
  'web-dev-job-001',
  'Which HTML attribute is used to provide alternative text for images?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "alt"}, {"option": "B", "text": "title"}, {"option": "C", "text": "src"}, {"option": "D", "text": "description"}]',
  'A',
  'The alt attribute provides alternative text for images, which is important for accessibility and SEO. It should describe the image content.',
  2,
  45,
  '["HTML", "accessibility", "images"]',
  'html-css-basics',
  'HTML Attributes',
  'system',
  'approved',
  'Accessibility knowledge test',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q005',
  'web-dev-job-001',
  'What is the difference between margin and padding in CSS?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Margin is outside the element, padding is inside"}, {"option": "B", "text": "Padding is outside the element, margin is inside"}, {"option": "C", "text": "They are the same thing"}, {"option": "D", "text": "Margin affects text, padding affects background"}]',
  'A',
  'Margin creates space outside the element border, while padding creates space inside the element border, between the content and the border.',
  2,
  60,
  '["CSS", "box-model", "spacing"]',
  'html-css-basics',
  'CSS Box Model',
  'system',
  'approved',
  'Fundamental CSS concept',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q006',
  'web-dev-job-001',
  'Which CSS selector has the highest specificity?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Inline styles"}, {"option": "B", "text": "ID selectors"}, {"option": "C", "text": "Class selectors"}, {"option": "D", "text": "Element selectors"}]',
  'A',
  'Inline styles have the highest specificity (1000), followed by ID selectors (100), class selectors (10), and element selectors (1).',
  2,
  60,
  '["CSS", "specificity", "selectors"]',
  'html-css-basics',
  'CSS Specificity',
  'system',
  'approved',
  'Advanced CSS knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q007',
  'web-dev-job-001',
  'What is the purpose of the CSS z-index property?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Controls the stacking order of positioned elements"}, {"option": "B", "text": "Sets the zoom level"}, {"option": "C", "text": "Controls the z-axis rotation"}, {"option": "D", "text": "Sets the z-axis position"}]',
  'A',
  'The z-index property controls the stacking order of positioned elements. Higher values appear in front of lower values.',
  2,
  60,
  '["CSS", "positioning", "layering"]',
  'html-css-basics',
  'CSS Positioning',
  'system',
  'approved',
  'CSS positioning knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q008',
  'web-dev-job-001',
  'Which HTML5 input type is used for email addresses?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "type=\"email\""}, {"option": "B", "text": "type=\"mail\""}, {"option": "C", "text": "type=\"text\""}, {"option": "D", "text": "type=\"address\""}]',
  'A',
  'The input type="email" provides built-in validation for email addresses and shows appropriate keyboard on mobile devices.',
  2,
  45,
  '["HTML5", "forms", "validation"]',
  'html-css-basics',
  'HTML5 Forms',
  'system',
  'approved',
  'HTML5 form knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q009',
  'web-dev-job-001',
  'What does the CSS property "display: flex" do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Creates a flexible container for layout"}, {"option": "B", "text": "Makes text flexible"}, {"option": "C", "text": "Creates flexible borders"}, {"option": "D", "text": "Makes images flexible"}]',
  'A',
  'display: flex creates a flex container, allowing flexible layout of child elements using flexbox properties.',
  2,
  60,
  '["CSS", "flexbox", "layout"]',
  'css-layout',
  'Flexbox',
  'system',
  'approved',
  'Modern CSS layout knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q010',
  'web-dev-job-001',
  'Which CSS pseudo-class is used to style visited links?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": ":visited"}, {"option": "B", "text": ":link"}, {"option": "C", "text": ":hover"}, {"option": "D", "text": ":active"}]',
  'A',
  'The :visited pseudo-class is used to style links that have been visited by the user.',
  2,
  45,
  '["CSS", "pseudo-classes", "links"]',
  'html-css-basics',
  'CSS Pseudo-classes',
  'system',
  'approved',
  'CSS pseudo-class knowledge',
  NOW(),
  NOW(),
  true
),

-- JavaScript Core Concepts (10 questions)
(
  'web-dev-q011',
  'web-dev-job-001',
  'What is the difference between "let" and "var" in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "let has block scope, var has function scope"}, {"option": "B", "text": "var has block scope, let has function scope"}, {"option": "C", "text": "They are identical"}, {"option": "D", "text": "let is faster than var"}]',
  'A',
  'let has block scope (limited to the block where it is declared), while var has function scope (accessible throughout the entire function).',
  2,
  60,
  '["JavaScript", "ES6", "scope", "variables"]',
  'modern-js',
  'Variable Declarations',
  'system',
  'approved',
  'ES6+ knowledge test',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q012',
  'web-dev-job-001',
  'What will be the output of: console.log(typeof null)?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "object"}, {"option": "B", "text": "null"}, {"option": "C", "text": "undefined"}, {"option": "D", "text": "string"}]',
  'A',
  'typeof null returns "object" due to a bug in JavaScript. This is a well-known quirk in the language.',
  2,
  60,
  '["JavaScript", "typeof", "null", "quirks"]',
  'javascript-core',
  'Type Checking',
  'system',
  'approved',
  'JavaScript quirks knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q013',
  'web-dev-job-001',
  'What is a closure in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "A function that has access to variables in its outer scope"}, {"option": "B", "text": "A way to close a function"}, {"option": "C", "text": "A type of loop"}, {"option": "D", "text": "A way to hide variables"}]',
  'A',
  'A closure is a function that has access to variables in its outer (enclosing) scope even after the outer function returns.',
  2,
  60,
  '["JavaScript", "closures", "scope"]',
  'javascript-core',
  'Closures',
  'system',
  'approved',
  'Advanced JavaScript concept',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q014',
  'web-dev-job-001',
  'What does the "this" keyword refer to in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "The object that the function is a method of"}, {"option": "B", "text": "The current function"}, {"option": "C", "text": "The global object"}, {"option": "D", "text": "The parent function"}]',
  'A',
  'The "this" keyword refers to the object that the function is a method of, but its value depends on how the function is called.',
  2,
  60,
  '["JavaScript", "this", "context"]',
  'javascript-core',
  'Context and This',
  'system',
  'approved',
  'JavaScript context knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q015',
  'web-dev-job-001',
  'What is the difference between == and === in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "== performs type coercion, === does not"}, {"option": "B", "text": "=== performs type coercion, == does not"}, {"option": "C", "text": "They are identical"}, {"option": "D", "text": "== is faster than ==="}]',
  'A',
  '== performs type coercion (converts types before comparison), while === performs strict equality without type coercion.',
  2,
  60,
  '["JavaScript", "comparison", "equality"]',
  'javascript-core',
  'Comparison Operators',
  'system',
  'approved',
  'JavaScript comparison knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q016',
  'web-dev-job-001',
  'What is the purpose of the "use strict" directive?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Enables strict mode for better error checking"}, {"option": "B", "text": "Makes code run faster"}, {"option": "C", "text": "Enables strict typing"}, {"option": "D", "text": "Prevents all errors"}]',
  'A',
  '"use strict" enables strict mode, which catches common coding mistakes and prevents certain actions that could lead to errors.',
  2,
  60,
  '["JavaScript", "strict-mode", "best-practices"]',
  'javascript-core',
  'Strict Mode',
  'system',
  'approved',
  'JavaScript best practices',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q017',
  'web-dev-job-001',
  'What is the difference between null and undefined in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "null is an assigned value, undefined means not assigned"}, {"option": "B", "text": "undefined is an assigned value, null means not assigned"}, {"option": "C", "text": "They are identical"}, {"option": "D", "text": "null is a string, undefined is a number"}]',
  'A',
  'null is an assigned value representing "no value", while undefined means a variable has been declared but not assigned a value.',
  2,
  60,
  '["JavaScript", "null", "undefined", "values"]',
  'javascript-core',
  'Data Types',
  'system',
  'approved',
  'JavaScript value types',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q018',
  'web-dev-job-001',
  'What does the Array.map() method do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Creates a new array with transformed elements"}, {"option": "B", "text": "Filters array elements"}, {"option": "C", "text": "Sorts array elements"}, {"option": "D", "text": "Reverses array elements"}]',
  'A',
  'Array.map() creates a new array by calling a function on every element of the original array and returning the results.',
  2,
  60,
  '["JavaScript", "arrays", "methods", "functional-programming"]',
  'javascript-core',
  'Array Methods',
  'system',
  'approved',
  'JavaScript array methods',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q019',
  'web-dev-job-001',
  'What is the purpose of the "const" keyword in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Creates a constant that cannot be reassigned"}, {"option": "B", "text": "Creates a constant that cannot be changed at all"}, {"option": "C", "text": "Creates a variable that is faster"}, {"option": "D", "text": "Creates a variable that is private"}]',
  'A',
  'const creates a constant that cannot be reassigned, but the contents of objects and arrays can still be modified.',
  2,
  60,
  '["JavaScript", "ES6", "const", "constants"]',
  'modern-js',
  'Variable Declarations',
  'system',
  'approved',
  'ES6+ variable declarations',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q020',
  'web-dev-job-001',
  'What is the difference between function declarations and function expressions?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Function declarations are hoisted, expressions are not"}, {"option": "B", "text": "Function expressions are hoisted, declarations are not"}, {"option": "C", "text": "They are identical"}, {"option": "text": "Function declarations are faster"}]',
  'A',
  'Function declarations are hoisted (can be called before they are defined), while function expressions are not hoisted.',
  2,
  60,
  '["JavaScript", "functions", "hoisting"]',
  'javascript-core',
  'Functions',
  'system',
  'approved',
  'JavaScript function concepts',
  NOW(),
  NOW(),
  true
),

-- DOM Manipulation (5 questions)
(
  'web-dev-q021',
  'web-dev-job-001',
  'What method is used to select an element by its ID in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "document.getElementById()"}, {"option": "B", "text": "document.getElementsByClass()"}, {"option": "C", "text": "document.querySelector()"}, {"option": "D", "text": "document.getElement()"}]',
  'A',
  'document.getElementById() is the standard method to select an element by its ID attribute.',
  2,
  45,
  '["JavaScript", "DOM", "selectors"]',
  'dom-manipulation',
  'Element Selection',
  'system',
  'approved',
  'DOM manipulation basics',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q022',
  'web-dev-job-001',
  'What does the addEventListener() method do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Attaches an event handler to an element"}, {"option": "B", "text": "Adds a new element to the DOM"}, {"option": "C", "text": "Removes an event handler"}, {"option": "D", "text": "Creates a new event"}]',
  'A',
  'addEventListener() attaches an event handler to an element, allowing you to respond to user interactions.',
  2,
  60,
  '["JavaScript", "DOM", "events"]',
  'dom-manipulation',
  'Event Handling',
  'system',
  'approved',
  'DOM event handling',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q023',
  'web-dev-job-001',
  'What is the difference between innerHTML and textContent?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "innerHTML includes HTML tags, textContent only includes text"}, {"option": "B", "text": "textContent includes HTML tags, innerHTML only includes text"}, {"option": "C", "text": "They are identical"}, {"option": "D", "text": "innerHTML is faster than textContent"}]',
  'A',
  'innerHTML includes HTML markup, while textContent only includes the text content without HTML tags.',
  2,
  60,
  '["JavaScript", "DOM", "content"]',
  'dom-manipulation',
  'Content Manipulation',
  'system',
  'approved',
  'DOM content manipulation',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q024',
  'web-dev-job-001',
  'What method is used to create a new element in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "document.createElement()"}, {"option": "B", "text": "document.newElement()"}, {"option": "C", "text": "document.addElement()"}, {"option": "D", "text": "document.buildElement()"}]',
  'A',
  'document.createElement() creates a new HTML element that can then be added to the DOM.',
  2,
  60,
  '["JavaScript", "DOM", "creation"]',
  'dom-manipulation',
  'Element Creation',
  'system',
  'approved',
  'DOM element creation',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q025',
  'web-dev-job-001',
  'What does the preventDefault() method do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Prevents the default action of an event"}, {"option": "B", "text": "Prevents all events"}, {"option": "C", "text": "Prevents event bubbling"}, {"option": "D", "text": "Prevents event capturing"}]',
  'A',
  'preventDefault() prevents the default action of an event from occurring (like following a link or submitting a form).',
  2,
  60,
  '["JavaScript", "DOM", "events", "prevention"]',
  'dom-manipulation',
  'Event Prevention',
  'system',
  'approved',
  'Event handling knowledge',
  NOW(),
  NOW(),
  true
),

-- CSS Layout & Responsive Design (5 questions)
(
  'web-dev-q026',
  'web-dev-job-001',
  'What is the difference between CSS Grid and Flexbox?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Grid is for 2D layouts, Flexbox is for 1D layouts"}, {"option": "B", "text": "Flexbox is for 2D layouts, Grid is for 1D layouts"}, {"option": "C", "text": "They are identical"}, {"option": "D", "text": "Grid is older than Flexbox"}]',
  'A',
  'CSS Grid is designed for 2D layouts (rows and columns), while Flexbox is designed for 1D layouts (either row or column).',
  2,
  60,
  '["CSS", "grid", "flexbox", "layout"]',
  'css-layout',
  'Layout Systems',
  'system',
  'approved',
  'Modern CSS layout knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q027',
  'web-dev-job-001',
  'What does the CSS property "position: sticky" do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Positions element relative until it reaches a threshold, then fixed"}, {"option": "B", "text": "Makes element sticky to touch"}, {"option": "C", "text": "Makes element always visible"}, {"option": "D", "text": "Makes element transparent"}]',
  'A',
  'position: sticky positions an element relative until it reaches a specified threshold, then it becomes fixed.',
  2,
  60,
  '["CSS", "positioning", "sticky"]',
  'css-layout',
  'CSS Positioning',
  'system',
  'approved',
  'Advanced CSS positioning',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q028',
  'web-dev-job-001',
  'What is a CSS media query used for?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Apply styles based on device characteristics"}, {"option": "B", "text": "Query media files"}, {"option": "C", "text": "Apply styles to media elements"}, {"option": "D", "text": "Query CSS properties"}]',
  'A',
  'CSS media queries apply styles based on device characteristics like screen size, resolution, or orientation.',
  2,
  60,
  '["CSS", "media-queries", "responsive"]',
  'css-layout',
  'Responsive Design',
  'system',
  'approved',
  'Responsive design knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q029',
  'web-dev-job-001',
  'What does "vw" unit represent in CSS?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "1% of viewport width"}, {"option": "B", "text": "1% of viewport height"}, {"option": "C", "text": "1% of parent width"}, {"option": "D", "text": "1% of parent height"}]',
  'A',
  'vw (viewport width) represents 1% of the viewport width, making it useful for responsive design.',
  2,
  60,
  '["CSS", "units", "viewport", "responsive"]',
  'css-layout',
  'CSS Units',
  'system',
  'approved',
  'CSS units knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q030',
  'web-dev-job-001',
  'What is the CSS "box-sizing: border-box" property used for?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Include padding and border in element width"}, {"option": "B", "text": "Exclude padding and border from element width"}, {"option": "C", "text": "Add extra padding"}, {"option": "D", "text": "Remove borders"}]',
  'A',
  'box-sizing: border-box includes padding and border in the element width, making layout calculations more predictable.',
  2,
  60,
  '["CSS", "box-model", "box-sizing"]',
  'css-layout',
  'Box Model',
  'system',
  'approved',
  'CSS box model knowledge',
  NOW(),
  NOW(),
  true
),

-- JavaScript Async Programming (5 questions)
(
  'web-dev-q031',
  'web-dev-job-001',
  'What is a Promise in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "An object representing eventual completion of an async operation"}, {"option": "B", "text": "A function that always returns a value"}, {"option": "C", "text": "A type of loop"}, {"option": "D", "text": "A way to store data"}]',
  'A',
  'A Promise is an object representing the eventual completion or failure of an asynchronous operation.',
  2,
  60,
  '["JavaScript", "promises", "async"]',
  'javascript-async',
  'Promises',
  'system',
  'approved',
  'Async programming knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q032',
  'web-dev-job-001',
  'What does the async/await syntax do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Makes asynchronous code look synchronous"}, {"option": "B", "text": "Makes synchronous code asynchronous"}, {"option": "C", "text": "Makes code run faster"}, {"option": "D", "text": "Makes code more secure"}]',
  'A',
  'async/await makes asynchronous code look and behave more like synchronous code, improving readability.',
  2,
  60,
  '["JavaScript", "async-await", "syntax"]',
  'javascript-async',
  'Async/Await',
  'system',
  'approved',
  'Modern async programming',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q033',
  'web-dev-job-001',
  'What happens when a Promise is rejected?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "The catch block or .catch() method is executed"}, {"option": "B", "text": "The then block is executed"}, {"option": "C", "text": "The code stops running"}, {"option": "D", "text": "An error is thrown immediately"}]',
  'A',
  'When a Promise is rejected, the catch block or .catch() method is executed to handle the error.',
  2,
  60,
  '["JavaScript", "promises", "error-handling"]',
  'javascript-async',
  'Promise Error Handling',
  'system',
  'approved',
  'Promise error handling',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q034',
  'web-dev-job-001',
  'What is the purpose of Promise.all()?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Wait for all promises to resolve"}, {"option": "B", "text": "Wait for the first promise to resolve"}, {"option": "C", "text": "Cancel all promises"}, {"option": "D", "text": "Create multiple promises"}]',
  'A',
  'Promise.all() waits for all promises in an array to resolve, returning an array of resolved values.',
  2,
  60,
  '["JavaScript", "promises", "concurrency"]',
  'javascript-async',
  'Promise Methods',
  'system',
  'approved',
  'Promise concurrency knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q035',
  'web-dev-job-001',
  'What does the setTimeout() function do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Executes a function after a specified delay"}, {"option": "B", "text": "Sets a timer for an element"}, {"option": "C", "text": "Delays all code execution"}, {"option": "D", "text": "Creates a timeout error"}]',
  'A',
  'setTimeout() executes a function after a specified delay in milliseconds.',
  2,
  60,
  '["JavaScript", "timers", "async"]',
  'javascript-async',
  'Timers',
  'system',
  'approved',
  'JavaScript timer functions',
  NOW(),
  NOW(),
  true
),

-- Web APIs & HTTP (5 questions)
(
  'web-dev-q036',
  'web-dev-job-001',
  'What does HTTP status code 404 mean?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Not Found"}, {"option": "B", "text": "Server Error"}, {"option": "C", "text": "Unauthorized"}, {"option": "D", "text": "Forbidden"}]',
  'A',
  'HTTP 404 means "Not Found" - the requested resource could not be found on the server.',
  2,
  45,
  '["HTTP", "status-codes", "web"]',
  'web-apis',
  'HTTP Status Codes',
  'system',
  'approved',
  'HTTP knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q037',
  'web-dev-job-001',
  'What is the difference between GET and POST HTTP methods?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "GET retrieves data, POST sends data"}, {"option": "B", "text": "POST retrieves data, GET sends data"}, {"option": "C", "text": "They are identical"}, {"option": "D", "text": "GET is faster than POST"}]',
  'A',
  'GET is used to retrieve data from a server, while POST is used to send data to a server.',
  2,
  60,
  '["HTTP", "methods", "web"]',
  'web-apis',
  'HTTP Methods',
  'system',
  'approved',
  'HTTP methods knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q038',
  'web-dev-job-001',
  'What is CORS in web development?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Cross-Origin Resource Sharing"}, {"option": "B", "text": "Cross-Origin Request Security"}, {"option": "C", "text": "Cross-Origin Response Sharing"}, {"option": "D", "text": "Cross-Origin Resource Security"}]',
  'A',
  'CORS (Cross-Origin Resource Sharing) is a security feature that allows web pages to make requests to different domains.',
  2,
  60,
  '["web", "CORS", "security", "APIs"]',
  'web-apis',
  'CORS',
  'system',
  'approved',
  'Web security knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q039',
  'web-dev-job-001',
  'What does the fetch() API return?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "A Promise that resolves to a Response object"}, {"option": "B", "text": "A Response object directly"}, {"option": "C", "text": "A string with the response"}, {"option": "D", "text": "An error object"}]',
  'A',
  'fetch() returns a Promise that resolves to a Response object representing the response to the request.',
  2,
  60,
  '["JavaScript", "fetch", "APIs", "async"]',
  'web-apis',
  'Fetch API',
  'system',
  'approved',
  'Modern web APIs knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q040',
  'web-dev-job-001',
  'What is JSON in web development?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "JavaScript Object Notation - a data format"}, {"option": "B", "text": "A JavaScript library"}, {"option": "C", "text": "A database system"}, {"option": "D", "text": "A programming language"}]',
  'A',
  'JSON (JavaScript Object Notation) is a lightweight data interchange format that is easy to read and write.',
  2,
  60,
  '["JSON", "data-format", "web"]',
  'web-apis',
  'Data Formats',
  'system',
  'approved',
  'Data format knowledge',
  NOW(),
  NOW(),
  true
),

-- Browser APIs (3 questions)
(
  'web-dev-q041',
  'web-dev-job-001',
  'What is the difference between localStorage and sessionStorage?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "localStorage persists until cleared, sessionStorage lasts for session"}, {"option": "B", "text": "sessionStorage persists until cleared, localStorage lasts for session"}, {"option": "C", "text": "They are identical"}, {"option": "D", "text": "localStorage is faster than sessionStorage"}]',
  'A',
  'localStorage persists until explicitly cleared, while sessionStorage only lasts for the browser session.',
  2,
  60,
  '["JavaScript", "storage", "browser-apis"]',
  'browser-apis',
  'Web Storage',
  'system',
  'approved',
  'Browser storage knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q042',
  'web-dev-job-001',
  'What does the Geolocation API do?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Provides access to device location"}, {"option": "B", "text": "Provides access to device camera"}, {"option": "C", "text": "Provides access to device microphone"}, {"option": "D", "text": "Provides access to device storage"}]',
  'A',
  'The Geolocation API provides access to the device location information with user permission.',
  2,
  60,
  '["JavaScript", "geolocation", "browser-apis"]',
  'browser-apis',
  'Geolocation API',
  'system',
  'approved',
  'Browser API knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q043',
  'web-dev-job-001',
  'What is the purpose of the Intersection Observer API?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Observes when elements enter or exit the viewport"}, {"option": "B", "text": "Observes mouse movements"}, {"option": "C", "text": "Observes keyboard events"}, {"option": "D", "text": "Observes network requests"}]',
  'A',
  'The Intersection Observer API observes when elements enter or exit the viewport, useful for lazy loading and animations.',
  2,
  60,
  '["JavaScript", "intersection-observer", "browser-apis"]',
  'browser-apis',
  'Intersection Observer',
  'system',
  'approved',
  'Advanced browser APIs',
  NOW(),
  NOW(),
  true
),

-- Web Performance (2 questions)
(
  'web-dev-q044',
  'web-dev-job-001',
  'What is lazy loading in web development?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Loading resources only when needed"}, {"option": "B", "text": "Loading resources slowly"}, {"option": "C", "text": "Loading resources in background"}, {"option": "D", "text": "Loading resources multiple times"}]',
  'A',
  'Lazy loading loads resources (like images) only when they are needed, improving page performance.',
  2,
  60,
  '["performance", "optimization", "lazy-loading"]',
  'performance',
  'Performance Optimization',
  'system',
  'approved',
  'Web performance knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q045',
  'web-dev-job-001',
  'What is the purpose of minification in web development?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Reduce file size by removing unnecessary characters"}, {"option": "B", "text": "Make code more readable"}, {"option": "C", "text": "Add comments to code"}, {"option": "D", "text": "Convert code to different format"}]',
  'A',
  'Minification reduces file size by removing unnecessary characters like whitespace and comments.',
  2,
  60,
  '["performance", "optimization", "minification"]',
  'performance',
  'Code Optimization',
  'system',
  'approved',
  'Web optimization techniques',
  NOW(),
  NOW(),
  true
),

-- Web Security (2 questions)
(
  'web-dev-q046',
  'web-dev-job-001',
  'What is XSS (Cross-Site Scripting)?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "A security vulnerability where malicious scripts are injected"}, {"option": "B", "text": "A way to share scripts between sites"}, {"option": "C", "text": "A JavaScript framework"}, {"option": "D", "text": "A type of CSS"}]',
  'A',
  'XSS is a security vulnerability where malicious scripts are injected into web pages viewed by other users.',
  2,
  60,
  '["security", "XSS", "vulnerabilities"]',
  'security',
  'Web Security',
  'system',
  'approved',
  'Web security knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q047',
  'web-dev-job-001',
  'What is CSRF (Cross-Site Request Forgery)?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "An attack that tricks users into performing unwanted actions"}, {"option": "B", "text": "A way to prevent requests"}, {"option": "C", "text": "A type of authentication"}, {"option": "D", "text": "A JavaScript library"}]',
  'A',
  'CSRF is an attack that tricks users into performing unwanted actions on a web application where they are authenticated.',
  2,
  60,
  '["security", "CSRF", "attacks"]',
  'security',
  'Web Security',
  'system',
  'approved',
  'Web security vulnerabilities',
  NOW(),
  NOW(),
  true
),

-- Modern JavaScript (3 questions)
(
  'web-dev-q048',
  'web-dev-job-001',
  'What is destructuring in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Extracting values from arrays or objects into variables"}, {"option": "B", "text": "Destroying arrays or objects"}, {"option": "C", "text": "Creating new arrays or objects"}, {"option": "D", "text": "Sorting arrays or objects"}]',
  'A',
  'Destructuring allows you to extract values from arrays or properties from objects into distinct variables.',
  2,
  60,
  '["JavaScript", "ES6", "destructuring"]',
  'modern-js',
  'ES6+ Features',
  'system',
  'approved',
  'Modern JavaScript features',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q049',
  'web-dev-job-001',
  'What is the spread operator (...) used for in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "Expanding arrays or objects into individual elements"}, {"option": "B", "text": "Combining arrays or objects"}, {"option": "C", "text": "Splitting strings"}, {"option": "D", "text": "Creating loops"}]',
  'A',
  'The spread operator (...) expands arrays or objects into individual elements, useful for copying, merging, or passing arguments.',
  2,
  60,
  '["JavaScript", "ES6", "spread-operator"]',
  'modern-js',
  'ES6+ Features',
  'system',
  'approved',
  'ES6+ operator knowledge',
  NOW(),
  NOW(),
  true
),
(
  'web-dev-q050',
  'web-dev-job-001',
  'What is a template literal in JavaScript?',
  'mcq',
  'technical',
  'medium',
  '[{"option": "A", "text": "A string that allows embedded expressions"}, {"option": "B", "text": "A template for creating objects"}, {"option": "C", "text": "A template for creating functions"}, {"option": "D", "text": "A template for creating arrays"}]',
  'A',
  'Template literals are strings that allow embedded expressions using backticks (`) and ${} syntax.',
  2,
  60,
  '["JavaScript", "ES6", "template-literals"]',
  'modern-js',
  'ES6+ Features',
  'system',
  'approved',
  'Modern JavaScript syntax',
  NOW(),
  NOW(),
  true
);

-- Update the job description to have questions assigned
UPDATE job_descriptions 
SET updated_at = NOW()
WHERE id = 'web-dev-job-001';
